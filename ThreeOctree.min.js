/*!
 *
 * ThreeOctree.js / https://github.com/collinhover/threeoctree
 * (sparse) dynamic 3D spatial representation structure for fast searches.
 *
 * @author Collin Hover / http://collinhover.com/
 * based on Dynamic Octree by Piko3D @ http://www.piko3d.com/ and Octree by Marek Pawlowski @ pawlowski.it
 *
 */
THREE.Octree=function(a){a=a||{};a.tree=this;this.nodeCount=0;this.INDEX_INSIDE_CROSS=-1;this.INDEX_OUTSIDE_OFFSET=2;this.INDEX_OUTSIDE_POS_X=this.is_number(a.INDEX_OUTSIDE_POS_X)?a.INDEX_OUTSIDE_POS_X:0;this.INDEX_OUTSIDE_NEG_X=this.is_number(a.INDEX_OUTSIDE_NEG_X)?a.INDEX_OUTSIDE_NEG_X:1;this.INDEX_OUTSIDE_POS_Y=this.is_number(a.INDEX_OUTSIDE_POS_Y)?a.INDEX_OUTSIDE_POS_Y:2;this.INDEX_OUTSIDE_NEG_Y=this.is_number(a.INDEX_OUTSIDE_NEG_Y)?a.INDEX_OUTSIDE_NEG_Y:3;this.INDEX_OUTSIDE_POS_Z=this.is_number(a.INDEX_OUTSIDE_POS_Z)?a.INDEX_OUTSIDE_POS_Z:4;this.INDEX_OUTSIDE_NEG_Z=this.is_number(a.INDEX_OUTSIDE_NEG_Z)?a.INDEX_OUTSIDE_NEG_Z:5;this.INDEX_OUTSIDE_MAP=[];this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_POS_X]={index:this.INDEX_OUTSIDE_POS_X,count:0,x:1,y:0,z:0};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_NEG_X]={index:this.INDEX_OUTSIDE_NEG_X,count:0,x:-1,y:0,z:0};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_POS_Y]={index:this.INDEX_OUTSIDE_POS_Y,count:0,x:0,y:1,z:0};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_NEG_Y]={index:this.INDEX_OUTSIDE_NEG_Y,count:0,x:0,y:-1,z:0};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_POS_Z]={index:this.INDEX_OUTSIDE_POS_Z,count:0,x:0,y:0,z:1};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_NEG_Z]={index:this.INDEX_OUTSIDE_NEG_Z,count:0,x:0,y:0,z:-1};this.FLAG_POS_X=1<<(this.INDEX_OUTSIDE_POS_X+1);this.FLAG_NEG_X=1<<(this.INDEX_OUTSIDE_NEG_X+1);this.FLAG_POS_Y=1<<(this.INDEX_OUTSIDE_POS_Y+1);this.FLAG_NEG_Y=1<<(this.INDEX_OUTSIDE_NEG_Y+1);this.FLAG_POS_Z=1<<(this.INDEX_OUTSIDE_POS_Z+1);this.FLAG_NEG_Z=1<<(this.INDEX_OUTSIDE_NEG_Z+1);this.scene=a.scene;this.objects=[];this.objectsData=[];this.depthMax=this.is_number(a.depthMax)?a.depthMax:-1;this.objectsThreshold=this.is_number(a.objectsThreshold)?a.objectsThreshold:8;this.overlapPct=this.is_number(a.overlapPct)?a.overlapPct:0.15;this.root=a.root instanceof THREE.OctreeNode?a.root:new THREE.OctreeNode(a)};THREE.Octree.prototype={is_number:function(a){return !isNaN(a)&&isFinite(a)},root_set:function(a){if(a instanceof THREE.OctreeNode){this.root=a;this.root.properties_update_cascade()}},add:function(f,b){var g,c,e,h,a,d;if(f instanceof THREE.OctreeObjectData){f=f.object}e=this.objects.indexOf(f);if(e===-1){this.objects.push(f);this.update_object_world_matrix(f);if(b===true){h=f.geometry;a=h.faces;for(g=0,c=a.length;g<c;g++){this.add_object_data(f,a[g])}}else{this.add_object_data(f)}}},add_object_data:function(b,c){var a=new THREE.OctreeObjectData(b,c);this.objectsData.push(a);this.root.add_object(a)},remove:function(d){var e,a,c=d,b,f;if(d instanceof THREE.OctreeObjectData){d=d.object}b=this.objects.indexOf(d);if(b!==-1){this.objects.splice(b,1);f=this.root.remove_object(c);for(e=0,a=f.length;e<a;e++){c=f[e];b=this.objectsData.indexOf(c);if(b!==-1){this.objectsData.splice(b,1)}}}},extend:function(c){var e,b,a,d;if(c instanceof THREE.Octree){a=c.objectsData;for(e=0,b=a.length;e<b;e++){d=a[e];this.add(d,d.usesFaces())}}},update:function(){var e,a,g,c,b,f,h,d=[];for(e=0,a=this.objects.length;e<a;e++){c=this.objects[e];this.update_object_world_matrix(c)}for(e=0,a=this.objectsData.length;e<a;e++){b=this.objectsData[e];g=b.node;b.update();if(g instanceof THREE.OctreeNode&&!b.positionLast.equals(b.position)){h=b.indexOctant;f=g.octant_index(b);if(f!==h){d.push(b)}}}for(e=0,a=d.length;e<a;e++){b=d[e];b.node.remove_object(b);this.root.add_object(b)}},search:function(h,k,j,n){var g,d,c,p,o,e,f,b,a,m;p=[].concat(this.root.objects);for(g=0,d=this.root.nodesIndices.length;g<d;g++){c=this.root.nodesByIndex[this.root.nodesIndices[g]];p=c.search(h,k,p,n)}if(j===true){f=[];a=[];for(g=0,d=p.length;g<d;g++){o=p[g];e=o.object;m=a.indexOf(e);if(m===-1){b={object:e,faces:[]};f.push(b);a.push(e)}else{b=f[m]}if(typeof o.faces!=="undefined"){b.faces.push(o.faces)}}}else{f=p}return f},update_object_world_matrix:function(c){var d,a,f=[c],e,b;e=c.parent;while(e){f.push(e);e=e.parent}for(d=0,a=f.length;d<a;d++){e=f[d];if(e.matrixWorldNeedsUpdate===true){b=e}}if(typeof b!=="undefined"){b.updateMatrixWorld()}},depth_end:function(){return this.root.depth_end()},node_count_end:function(){return this.root.node_count_end()},object_count_end:function(){return this.root.object_count_end()},to_console:function(){this.root.to_console()}};THREE.OctreeObjectData=function(a,b){this.utilVec31FaceBounds=new THREE.Vector3();this.object=a;this.faces=b;this.radius=0;this.position=new THREE.Vector3();if(this.object instanceof THREE.Object3D){this.update()}this.positionLast=this.position.clone()};THREE.OctreeObjectData.prototype={update:function(){if(this.usesFaces()){this.radius=this.face_bounding_radius(this.object,this.faces);this.object.matrixWorld.multiplyVector3(this.position.copy(this.faces.centroid))}else{this.radius=this.object.geometry instanceof THREE.Geometry?this.object.geometry.boundingSphere.radius:this.object.boundRadius;this.position.copy(this.object.matrixWorld.getPosition())}this.radius=this.radius*Math.max(this.object.scale.x,this.object.scale.y,this.object.scale.z)},face_bounding_radius:function(c,g){var k=c instanceof THREE.Mesh?c.geometry:c,f=k.vertices,a=g.centroid,m=f[g.a],j=f[g.b],h=f[g.c],e,b=this.utilVec31FaceBounds,d;if(g instanceof THREE.Face4){e=f[g.d];a.add(m,j).addSelf(h).addSelf(e).divideScalar(4);d=Math.max(b.sub(a,m).length(),b.sub(a,j).length(),b.sub(a,h).length(),b.sub(a,e).length())}else{a.add(m,j).addSelf(h).divideScalar(3);d=Math.max(b.sub(a,m).length(),b.sub(a,j).length(),b.sub(a,h).length())}return d},usesFaces:function(){return this.faces instanceof THREE.Face3||this.faces instanceof THREE.Face4}};THREE.OctreeNode=function(a){this.utilVec31Branch=new THREE.Vector3();this.utilVec31Expand=new THREE.Vector3();this.utilVec31Search=new THREE.Vector3();this.utilVec31LinePoint=new THREE.Vector3();this.utilVec32LinePoint=new THREE.Vector3();this.utilVec33LinePoint=new THREE.Vector3();a=a||{};if(a.tree instanceof THREE.Octree){this.tree=a.tree}else{if(parent instanceof THREE.OctreeNode!==true){a.root=this;this.tree=new THREE.Octree(a)}}this.id=this.tree.nodeCount++;this.position=a.position instanceof THREE.Vector3?a.position:new THREE.Vector3();this.radius=this.is_number(a.radius)&&a.radius>0?a.radius:1;this.indexOctant=a.indexOctant;this.depth=0;this.reset();this.parent_set(a.parent);this.overlap=this.radius*this.tree.overlapPct;this.radiusOverlap=this.radius+this.overlap;this.left=this.position.x-this.radiusOverlap;this.right=this.position.x+this.radiusOverlap;this.bottom=this.position.y-this.radiusOverlap;this.top=this.position.y+this.radiusOverlap;this.back=this.position.z-this.radiusOverlap;this.front=this.position.z+this.radiusOverlap;if(this.tree.scene){this.visual=new THREE.Mesh(new THREE.CubeGeometry(this.radiusOverlap*2,this.radiusOverlap*2,this.radiusOverlap*2),new THREE.MeshBasicMaterial({color:16711680,wireframe:true,wireframeLinewidth:1}));this.visual.position.copy(this.position);this.tree.scene.add(this.visual)}};THREE.OctreeNode.prototype={is_number:function(a){return !isNaN(a)&&isFinite(a)},is_array:function(a){return Object.prototype.toString.call(a)==="[object Array]"},ensure_array:function(a){return a?(this.is_array(a)!==true?[a]:a):[]},parent_set:function(a){if(a!==this&&this.parent!==a){this.parent=a;this.properties_update_cascade()}},properties_update_cascade:function(){var b,a;if(this._parent instanceof THREE.OctreeNode){this.tree=this._parent.tree;this.depth=this._parent.depth+1}else{this.depth=0}for(b=0,a=this.nodesIndices.length;b<a;b++){this.nodesByIndex[this.nodesIndices[b]].properties_update_cascade()}},reset:function(b,f){var c,a,d,e=this.nodesIndices||[],g=this.nodesByIndex;this.objects=[];this.nodesIndices=[];this.nodesByIndex={};for(c=0,a=e.length;c<a;c++){d=g[e[c]];d.parent_set(undefined);if(b===true){d.reset(b,f)}}if(f===true&&this.visual&&this.visual.parent){this.visual.parent.remove(this.visual)}},add_node:function(b,a){a=b.indexOctant=this.is_number(a)?a:this.is_number(b.indexOctant)?b.indexOctant:this.octant_index(b);if(this.nodesIndices.indexOf(a)===-1){this.nodesIndices.push(a)}this.nodesByIndex[a]=b;if(b.parent!==this){b.parent_set(this)}},remove_node:function(b){var c=-1,a,d;if(b instanceof THREE.OctreeNode&&this.nodesByIndex[b.indexOctant]===b){d=b;c=d.indexOctant}else{if(this.is_number(b)){c=b}else{for(a in this.nodesByIndex){d=this.nodesByIndex[a];if(d===b){c=a;break}}}}if(c!==-1){a=this.nodesIndices.indexOf(c);this.nodesIndices.splice(a,1);d=d||this.nodesByIndex[c];delete this.nodesByIndex[c];if(d.parent===this){d.parent_set(undefined)}}},add_object:function(b){var a,c;indexOctant=this.octant_index(b);if(indexOctant>-1&&this.nodesIndices.length>0){c=this.branch(indexOctant);c.add_object(b)}else{if(indexOctant<-1&&this.parent instanceof THREE.OctreeNode){this.parent.add_object(b)}else{a=this.objects.indexOf(b);if(a===-1){this.objects.push(b)}b.node=this;this.grow_check()}}},add_objects_no_check:function(d){var c,a,b;for(c=0,a=d.length;c<a;c++){b=d[c];this.objects.push(b);b.node=this}},remove_object:function(b){var c,a,d,e;e=this.remove_object_end(b,{searchComplete:false,nodesRemovedFrom:[],objectsDataRemoved:[]});d=e.nodesRemovedFrom;if(d.length>0){for(c=0,a=d.length;c<a;c++){d[c].shrink()}}return e.objectsDataRemoved},remove_object_end:function(d,h){var e,a,c=-1,b,g,f;if(d instanceof THREE.OctreeObjectData){c=this.objects.indexOf(d);if(c!==-1){this.objects.splice(c,1);d.node=undefined;h.objectsDataRemoved.push(d);h.searchComplete=f=true}}else{for(e=this.objects.length-1;e>=0;e--){b=this.objects[e];if(b.object===d){this.objects.splice(e,1);b.node=undefined;h.objectsDataRemoved.push(b);f=true;if(typeof b.faces==="undefined"){h.searchComplete=true;break}}}}if(f===true){h.nodesRemovedFrom.push(this)}if(h.searchComplete!==true){for(e=0,a=this.nodesIndices.length;e<a;e++){g=this.nodesByIndex[this.nodesIndices[e]];h=g.remove_object_end(d,h);if(h.searchComplete===true){break}}}return h},grow_check:function(){if(this.objects.length>this.tree.objectsThreshold&&this.tree.objectsThreshold>0){this.grow()}},grow:function(){var e=[],c=[],d=[],b=[],a=[];for(i=0,l=this.objects.length;i<l;i++){object=this.objects[i];indexOctant=this.octant_index(object);if(indexOctant>-1){d.push(object);b.push(indexOctant)}else{if(indexOctant<-1){e.push(object);c.push(indexOctant)}else{a.push(object)}}}if(d.length>0){a=a.concat(this.split(d,b))}if(e.length>0){a=a.concat(this.expand(e,c))}this.objects=a;this.merge_check()},split:function(h,b){var d,a,f,c,g,e;if(this.tree.depthMax<0||this.depth<this.tree.depthMax){h=h||this.objects;b=b||[];e=[];for(d=0,a=h.length;d<a;d++){c=h[d];f=this.is_number(b[d])?b[d]:this.octant_index(c);if(f>-1){g=this.branch(f);g.add_object(c)}else{e.push(c)}}if(h===this.objects){this.objects=e}}else{e=this.objects}return e},branch:function(e){var f,d,b,c,g,a;if(this.nodesByIndex[e] instanceof THREE.OctreeNode){f=this.nodesByIndex[e]}else{b=(this.radiusOverlap)*0.5;d=b*this.tree.overlapPct;c=b-d;g=this.utilVec31Branch.set(e&1?c:-c,e&2?c:-c,e&4?c:-c);a=new THREE.Vector3().add(this.position,g);f=new THREE.OctreeNode({tree:this.tree,parent:this,position:a,radius:b,indexOctant:e});this.add_node(f,e)}return f},expand:function(b,F){var B,A,J,D,G,c,o,s,j,u=this.tree.INDEX_OUTSIDE_MAP,q,x,v,t,g,e,z,y,w,E,C,n,m,k,a,f,H,d,r,h=this.utilVec31Expand,I,p;if(this.tree.depthMax<0||this.tree.root.depth_end()<this.tree.depthMax){b=b||this.objects;F=F||[];D=[];G=[];for(B=0,A=u.length;B<A;B++){u[B].count=0}for(B=0,A=b.length;B<A;B++){J=b[B];c=this.is_number(F[B])?F[B]:this.octant_index(J);if(c<-1){o=-c-this.tree.INDEX_OUTSIDE_OFFSET;if(o&this.tree.FLAG_POS_X){u[this.tree.INDEX_OUTSIDE_POS_X].count++}else{if(o&this.tree.FLAG_NEG_X){u[this.tree.INDEX_OUTSIDE_NEG_X].count++}}if(o&this.tree.FLAG_POS_Y){u[this.tree.INDEX_OUTSIDE_POS_Y].count++}else{if(o&this.tree.FLAG_NEG_Y){u[this.tree.INDEX_OUTSIDE_NEG_Y].count++}}if(o&this.tree.FLAG_POS_Z){u[this.tree.INDEX_OUTSIDE_POS_Z].count++}else{if(o&this.tree.FLAG_NEG_Z){u[this.tree.INDEX_OUTSIDE_NEG_Z].count++}}G.push(J)}else{D.push(J)}}if(G.length>0){q=u.slice(0);q.sort(function(L,K){return K.count-L.count});x=q[0];g=x.index|1;z=q[1];y=q[2];v=(z.index|1)!==g?z:y;e=v.index|1;z=q[2];y=q[3];w=q[4];E=z.index|1;C=y.index|1;t=E!==g&&E!==e?z:C!==g&&C!==e?y:w;n=x.x+v.x+t.x;m=x.y+v.y+t.y;k=x.z+v.z+t.z;c=this.octant_index_from_xyz(n,m,k);j=this.octant_index_from_xyz(-n,-m,-k);a=this.overlap;f=this.radius;d=this.tree.overlapPct>0?a/((0.5*this.tree.overlapPct)*(1+this.tree.overlapPct)):f*2;r=d*this.tree.overlapPct;H=(d+r)-(f+a);h.set(c&1?H:-H,c&2?H:-H,c&4?H:-H);I=new THREE.Vector3().add(this.position,h);p=new THREE.OctreeNode({tree:this.tree,position:I,radius:d});p.add_node(this,j);this.tree.root_set(p);for(B=0,A=G.length;B<A;B++){this.tree.root.add_object(G[B])}}if(b===this.objects){this.objects=D}}else{D=b}return D},shrink:function(){this.merge_check();this.tree.root.contract_check()},merge_check:function(){var a=this,b;while(a.parent instanceof THREE.OctreeNode&&a.object_count_end()<this.tree.objectsThreshold){b=a;a=a.parent}if(a!==this){a.merge(b)}},merge:function(c){var e,a,d,b,f;c=this.ensure_array(c);for(e=0,a=c.length;e<a;e++){f=c[e];this.add_objects_no_check(f.objects_end());f.reset(true,true);this.remove_node(f.indexOctant,f)}this.merge_check()},contract_check:function(){var e,c,g,f,b,a,d;if(this.nodesIndices.length>0){a=0;d=this.objects.length;for(e=0,c=this.nodesIndices.length;e<c;e++){g=this.nodesByIndex[this.nodesIndices[e]];f=g.object_count_end();d+=f;if(b instanceof THREE.OctreeNode===false||f>a){b=g;a=f}}d-=a;if(d<this.tree.objectsThreshold&&b instanceof THREE.OctreeNode){this.contract(b)}}},contract:function(d){var b,a,c;for(b=0,a=this.nodesIndices.length;b<a;b++){c=this.nodesByIndex[this.nodesIndices[b]];if(c!==d){d.add_objects_no_check(c.objects_end());c.reset(true,true)}}d.add_objects_no_check(this.objects);this.reset(false,true);this.tree.root_set(d);d.contract_check()},octant_index:function(r){var h,d,f,m,j=this.position,p=this.radiusOverlap,q=this.overlap,g,e,c,o,n,k,b,a=0;if(r instanceof THREE.OctreeObjectData){m=r.radius;f=r.position;r.positionLast.copy(f)}else{if(r instanceof THREE.OctreeNode){f=r.position;m=0}}g=f.x-j.x;e=f.y-j.y;c=f.z-j.z;o=Math.abs(g);n=Math.abs(e);k=Math.abs(c);b=Math.max(o,n,k);if(b+m>p){if(o+m>p){a=a^(g>0?this.tree.FLAG_POS_X:this.tree.FLAG_NEG_X)}if(n+m>p){a=a^(e>0?this.tree.FLAG_POS_Y:this.tree.FLAG_NEG_Y)}if(k+m>p){a=a^(c>0?this.tree.FLAG_POS_Z:this.tree.FLAG_NEG_Z)}r.indexOctant=-a-this.tree.INDEX_OUTSIDE_OFFSET;return r.indexOctant}if(g-m>-q){a=a|1}else{if(!(g+m<q)){r.indexOctant=this.tree.INDEX_INSIDE_CROSS;return r.indexOctant}}if(e-m>-q){a=a|2}else{if(!(e+m<q)){r.indexOctant=this.tree.INDEX_INSIDE_CROSS;return r.indexOctant}}if(c-m>-q){a=a|4}else{if(!(c+m<q)){r.indexOctant=this.tree.INDEX_INSIDE_CROSS;return r.indexOctant}}r.indexOctant=a;return r.indexOctant},octant_index_from_xyz:function(a,d,c){var b=0;if(a>0){b=b|1}if(d>0){b=b|2}if(c>0){b=b|4}return b},search:function(b,a,g,h){var d,c,f,e;if(h){e=this.intersect_ray(b,h,a)}else{e=this.intersect_sphere(b,a)}if(e===true){g=g.concat(this.objects);for(d=0,c=this.nodesIndices.length;d<c;d++){f=this.nodesByIndex[this.nodesIndices[d]];g=f.search(b,a,g,h)}}return g},intersect_sphere:function(b,a){var f=a*a,e=b.x,d=b.y,c=b.z;if(e<this.left){f-=Math.pow(e-this.left,2)}else{if(e>this.right){f-=Math.pow(e-this.right,2)}}if(d<this.bottom){f-=Math.pow(d-this.bottom,2)}else{if(d>this.top){f-=Math.pow(d-this.top,2)}}if(c<this.back){f-=Math.pow(c-this.back,2)}else{if(c>this.front){f-=Math.pow(c-this.front,2)}}return f>=0},intersect_ray:function(a,b,c){return this.intersect_sphere(this.closest_point_from_line(a,b,c),0)},closest_point_from_line:function(c,g,d){var b,f,h=this.utilVec31LinePoint.sub(this.position,c),a=this.utilVec32LinePoint.copy(g).normalize(),e=this.utilVec33LinePoint;b=h.dot(g);if(this.is_number(d)&&d>0){f=Math.min(Math.max(b/d,0),1)}else{d=1;f=Math.max(0,b)}e.add(c,a.multiplyScalar(f*d));return e},depth_end:function(d){var b,a,c;if(this.nodesIndices.length>0){for(b=0,a=this.nodesIndices.length;b<a;b++){c=this.nodesByIndex[this.nodesIndices[b]];d=c.depth_end(d)}}else{d=!d||this.depth>d?this.depth:d}return d},node_count_end:function(){return this.tree.root.node_count_cascade()+1},node_count_cascade:function(){var b,a,c=this.nodesIndices.length;for(b=0,a=this.nodesIndices.length;b<a;b++){c+=this.nodesByIndex[this.nodesIndices[b]].node_count_cascade()}return c},objects_end:function(d){var b,a,c;d=(d||[]).concat(this.objects);for(b=0,a=this.nodesIndices.length;b<a;b++){c=this.nodesByIndex[this.nodesIndices[b]];d=c.objects_end(d)}return d},object_count_end:function(){var b,a,c=this.objects.length;for(b=0,a=this.nodesIndices.length;b<a;b++){c+=this.nodesByIndex[this.nodesIndices[b]].object_count_end()}return c},object_count_start:function(){var b=this.objects.length,a=this.parent;while(a instanceof THREE.OctreeNode){b+=a.objects.length;a=a.parent}return b},to_console:function(d){var b,a,c,e="   ";d=typeof d==="string"?d:e;console.log((this.parent?d+" octree NODE > ":" octree ROOT > "),this," // id: ",this.id," // indexOctant: ",this.indexOctant," // position: ",this.position.x,this.position.y,this.position.z," // radius: ",this.radius," // depth: ",this.depth);console.log((this.parent?d+" ":" "),"+ objects ( ",this.objects.length," ) ",this.objects);console.log((this.parent?d+" ":" "),"+ children ( ",this.nodesIndices.length," )",this.nodesIndices,this.nodesByIndex);for(b=0,a=this.nodesIndices.length;b<a;b++){c=this.nodesByIndex[this.nodesIndices[b]];c.to_console(d+e)}}};(function(){var a=THREE.Ray;THREE.Ray=function(){a.apply(this,arguments);this.near=this.near||0;this.far=this.far||Infinity;var C=0.0001;var H=new THREE.Vector3();var G=new THREE.Vector3();var F=new THREE.Vector3();var E=new THREE.Vector3();var o=new THREE.Vector3();var n=new THREE.Vector3();var h=new THREE.Vector3();var I=new THREE.Vector3();var B=new THREE.Vector3();var q=function(d,c){return d.distance-c.distance};var m=new THREE.Vector3(),j=new THREE.Vector3(),g=new THREE.Vector3();var w,D,p;var t=function(c,d,b){m.sub(b,c);w=m.dot(d);D=j.add(c,g.copy(d).multiplyScalar(w));p=b.distanceTo(D);return p};var z,y,x,f,e,k,s,r;var A=function(v,u,d,J){m.sub(J,u);j.sub(d,u);g.sub(v,u);z=m.dot(m);y=m.dot(j);x=m.dot(g);f=j.dot(j);e=j.dot(g);k=1/(z*f-y*y);s=(f*x-y*e)*k;r=(z*e-y*x)*k;return(s>=0)&&(r>=0)&&(s+r<1)};this.intersectOctreeObject=function(U,R){var u,S,b=[];if(U.object instanceof THREE.Object3D){u=U;U=U.object}if(R===true){for(var P=0,O=U.children.length;P<O;P++){Array.prototype.push.apply(b,this.intersectObject(U.children[P],R))}}if(U instanceof THREE.Particle){p=t(this.origin,this.direction,U.matrixWorld.getPosition());if(p>U.scale.x){return[]}S={distance:p,point:U.position,face:null,object:U};b.push(S)}else{if(U instanceof THREE.Mesh){var V=THREE.Frustum.__v1.set(U.matrixWorld.getColumnX().length(),U.matrixWorld.getColumnY().length(),U.matrixWorld.getColumnZ().length());var M=U.geometry.boundingSphere.radius*Math.max(V.x,Math.max(V.y,V.z));p=t(this.origin,this.direction,U.matrixWorld.getPosition());if(p>M){return b}var Q,L,c,K,N,W,T=this.range*this.range,v=U.geometry,J=v.vertices,d;if(u&&u.faces){c=u.faces}else{c=v.faces}U.matrixRotationWorld.extractRotation(U.matrixWorld);for(Q=0,L=c.length;Q<L;Q++){K=c[Q];o.copy(this.origin);n.copy(this.direction);d=U.matrixWorld;h=d.multiplyVector3(h.copy(K.centroid)).subSelf(o);I=U.matrixRotationWorld.multiplyVector3(I.copy(K.normal));N=n.dot(I);if(Math.abs(N)<C){continue}W=I.dot(h)/N;if(W<0){continue}if(U.doubleSided||(U.flipSided?N>0:N<0)){B.add(o,n.multiplyScalar(W));p=o.distanceTo(B);if(p<this.near){continue}if(p>this.far){continue}if(K instanceof THREE.Face3){H=d.multiplyVector3(H.copy(J[K.a]));G=d.multiplyVector3(G.copy(J[K.b]));F=d.multiplyVector3(F.copy(J[K.c]));if(A(B,H,G,F)){S={distance:p,point:B.clone(),face:K,object:U};b.push(S)}}else{if(K instanceof THREE.Face4){H=d.multiplyVector3(H.copy(J[K.a]));G=d.multiplyVector3(G.copy(J[K.b]));F=d.multiplyVector3(F.copy(J[K.c]));E=d.multiplyVector3(E.copy(J[K.d]));if(A(B,H,G,E)||A(B,G,F,E)){S={distance:p,point:B.clone(),face:K,object:U};b.push(S)}}}}}}}b.sort(q);return b};this.intersectOctreeObjects=function(v,c){var u=[];for(var d=0,b=v.length;d<b;d++){Array.prototype.push.apply(u,this.intersectOctreeObject(v[d],c))}u.sort(q);return u}}})();